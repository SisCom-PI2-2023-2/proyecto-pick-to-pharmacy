---
layout: post
title: Semana 3
categories: posts
---

En esta semana del 26 y 28 de septiembre continuamos realizando mas pruebas de conceptos, dentro de las cuales, con el codigo que habiamos probado del RFID se le agregó una pequeña parte para realizar una accion, como prender un led
Luego se realizó la primera prueba de concepto de otro dispositivo, en este caso el Display LCD para observar como funcionaba. Se intentó crear un array de hexadecimal para cargar el ID de los usuarios y mandarlos a Thingsboard 
y por último, se realizó un intento de simulación con el sensor de distancia para calcular la cantidad de medicamentos en un estante.

- Para el RFID:

```c++
#include <SPI.h>
#include <MFRC522.h>   //GithubCommunity Version 1.4.10

#define RST_PIN  0   //Pin 9 para el reset del RC522
#define SS_PIN  15   //Pin 10 para el SS (SDA) del RC522
MFRC522 mfrc522(SS_PIN, RST_PIN); //Creamos el objeto para el RC522

byte uid1[4] = {0x36, 0x3C, 0x92, 0x89};
String uid2 = "34 6F 09 79";
int esIgual = 0;
#define led 5

void setup() {
  Serial.begin(9600); //Iniciamos la comunicación  serial
  SPI.begin();        //Iniciamos el Bus SPI
  mfrc522.PCD_Init(); // Iniciamos  el MFRC522
  pinMode(led, OUTPUT);
  digitalWrite(led, HIGH);
}

void loop() {
  // Revisamos si hay nuevas tarjetas  presentes

  if (digitalRead(led)){
    if ( mfrc522.PICC_IsNewCardPresent()) 
        {    Serial.println("Lectura del UID");

      //Seleccionamos una tarjeta
            if ( mfrc522.PICC_ReadCardSerial()) 
            {
                  // Enviamos serialemente su UID
                  Serial.print("Card UID:");
//                  Serial.print(mfrc522.uid.size);
                  for (esIgual = 0; esIgual < mfrc522.uid.size && uid1[esIgual] == mfrc522.uid.uidByte[esIgual]; esIgual++) {

                  } 
                  if(esIgual == 4){
                    digitalWrite(led, LOW);
                    delay(1000);
                    digitalWrite(led, HIGH);
                  }
                  Serial.println();

                  // Terminamos la lectura de la tarjeta  actual
                  mfrc522.PICC_HaltA();         
            }      
  } 
  }

}
```

- Para el display LCD:

```c++


#include "Wire.h"
#include "LiquidCrystal_I2C.h"

LiquidCrystal_I2C LCD(0x27,16,2);

void setup() {
   LCD.init();
   LCD.backlight();

   LCD.setCursor(1, 0);
   LCD.print("PARACETAMOL");

   LCD.setCursor(8, 1);
   LCD.print("CANT: 10");

   LCD.display();
}

void loop() {
}

```
- Código que se adicionó para crear el array de hexadecimales:

```c++


byte uid2[4] = {0x34, 0x6F, 0x09, 0x79};
byte newUID[4];

if ( mfrc522.PICC_IsNewCardPresent()) {
    //Seleccionamos una tarjeta
    if ( mfrc522.PICC_ReadCardSerial())
    {
      // Enviamos serialemente su UID
      for (int i = 0; i < mfrc522.uid.size; i++) {
        newUID[i] = mfrc522.uid.uidByte[i];
      }
      // Terminamos la lectura de la tarjeta  actual
```

- Para la calibración de medicamentos:

```c++


#define trig 4
#define echo 5
#define boton 0

long duration;
int distance;
int ancho = 3;
int retiro = 2;
int cantidad = 2;
int resta = 99;
int cantMax = 10;

void setup() {
  pinMode(trig, OUTPUT);
  pinMode(echo, INPUT);
  pinMode(boton, INPUT);
  Serial.begin(19200);
}

void loop() {
resta = 99;
  while (resta != 0) {
    ESP.wdtFeed();
    int presionado = digitalRead(boton);
    if (presionado ==0) {
      // Clears the trigPin
      digitalWrite(trig, LOW);
      delayMicroseconds(2);
      // Sets the trigPin on HIGH state for 10 micro seconds
      digitalWrite(trig, HIGH);
      delayMicroseconds(10);
      digitalWrite(trig, LOW);
      // Reads the echoPin, returns the sound wave travel time in microseconds
      duration = pulseIn(echo, HIGH);
      // Calculating the distance
      distance = duration * 0.034 / 2;
      // Prints the distance on the Serial Monitor
      Serial.print("Distance: ");
      Serial.println(distance);

      resta = (cantidad - retiro) - (cantMax - (distance / ancho));
      if (resta > 0) {
        Serial.println("Retiraste mas");

      }
      if (resta < 0 ){
        Serial.println("Retiraste menos");
      }

    }
  }
  Serial.println("OK");
}

```
