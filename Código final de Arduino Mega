#include <Servo.h>

#define Led1 3
#define Led2 4
#define Led3 5
#define Led4 6
#define trigIbu 22
#define echoIbu 30
#define trigOmeo 23
#define echoOmeo 31
#define trigAspi 24
#define echoAspi 32
#define trigNove 25
#define echoNove 33
Servo ServoIbu;
Servo ServoOmeo;
Servo ServoAspi;
Servo ServoNove;
float espacio[4] = {16.8, 19.5, 13.8, 13};
float grosor[4] = {2.26, 1.76, 2.02, 1.68};
int cantMax[4] = {5, 5, 7, 10};

void setup() {
  Serial.begin(9600);
  pinMode(Led1, OUTPUT);
  pinMode(Led2, OUTPUT);
  pinMode(Led3, OUTPUT);
  pinMode(Led4, OUTPUT);
  ServoIbu.attach(13);
  ServoOmeo.attach(12);
  ServoAspi.attach(11);
  ServoNove.attach(10);
  pinMode(trigIbu, OUTPUT);
  pinMode(echoIbu, INPUT);
  pinMode(trigOmeo, OUTPUT);
  pinMode(echoOmeo, INPUT);
  pinMode(trigAspi, OUTPUT);
  pinMode(echoAspi, INPUT);
  pinMode(trigNove, OUTPUT);
  pinMode(echoNove, INPUT);
}

void loop() {
    if(Serial.available()){
      int lectura = Serial.read();

      if(lectura == 'I'){
        digitalWrite(Led1, HIGH);
      }
      else if(lectura == 'O'){
        digitalWrite(Led2, HIGH);
      }
      else if(lectura == 'A'){
        digitalWrite(Led3, HIGH);
      }
      else if(lectura == 'N'){
        digitalWrite(Led4, HIGH);
      }
      else if(lectura == 'W'){
        ServoIbu.write(180);
      }
      else if(lectura == 'X'){
        ServoOmeo.write(180);
      }
      else if(lectura == 'Y'){
        ServoAspi.write(180);
      }
      else if(lectura == 'Z'){
        ServoNove.write(180);
      }
      else if(lectura == 'C'){
        ServoIbu.write(0);
        ServoOmeo.write(0);
        ServoAspi.write(0);
        ServoNove.write(0);
        digitalWrite(Led1, LOW);
        digitalWrite(Led2, LOW);
        digitalWrite(Led3, LOW);
        digitalWrite(Led4, LOW);
      }
      else if(lectura == 'M'){
        for(int i=0; i<4;i++){
        // Clears the trigPin
        digitalWrite(trigIbu + i, LOW);
        delayMicroseconds(2);
        // Sets the trigPin on HIGH state for 10 micro seconds
        digitalWrite(trigIbu + i, HIGH);
        delayMicroseconds(10);
        digitalWrite(trigIbu + i, LOW);
        // Reads the echoPin, returns the sound wave travel time in microseconds
        int duration = pulseIn(echoIbu + i, HIGH);
        // Calculating the distance
        int distance = duration * 0.034 / 2;
        int cantidad = cantMax[i] - int(round((distance - espacio[i])/grosor[i]));
        Serial.print(cantidad);
        }
      }
    }
}
